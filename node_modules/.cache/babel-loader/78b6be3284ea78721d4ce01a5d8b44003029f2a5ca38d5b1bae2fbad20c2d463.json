{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = require(\"@web3-react/store\");\nconst react_1 = require(\"react\");\nconst zustand_1 = require(\"zustand\");\nconst traditional_1 = require(\"zustand/traditional\");\nlet DynamicProvider;\nfunction importProvider() {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (DynamicProvider === undefined) {\n      try {\n        const {\n          Web3Provider\n        } = yield Promise.resolve().then(() => __importStar(require('@ethersproject/providers')));\n        DynamicProvider = Web3Provider;\n      } catch (_a) {\n        console.debug('@ethersproject/providers not available');\n        DynamicProvider = null;\n      }\n    }\n  });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f) {\n  const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n  const connector = f(actions);\n  const stateHooks = getStateHooks(store);\n  const derivedHooks = getDerivedHooks(stateHooks);\n  const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n  return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive(_ref) {\n  let {\n    chainId,\n    accounts,\n    activating\n  } = _ref;\n  return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector() {\n  for (var _len = arguments.length, initializedConnectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    initializedConnectors[_key] = arguments[_key];\n  }\n  function getIndex(connector) {\n    const index = initializedConnectors.findIndex(_ref2 => {\n      let [initializedConnector] = _ref2;\n      return connector === initializedConnector;\n    });\n    if (index === -1) throw new Error('Connector not found');\n    return index;\n  }\n  function useSelectedStore(connector) {\n    const store = initializedConnectors[getIndex(connector)][2];\n    if (!store) throw new Error('Stores not passed');\n    return store;\n  }\n  // the following code calls hooks in a map a lot, which violates the eslint rule.\n  // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n  function useSelectedChainId(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref3 => {\n      let [, {\n        useChainId\n      }] = _ref3;\n      return useChainId();\n    });\n    return values[getIndex(connector)];\n  }\n  function useSelectedAccounts(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref4 => {\n      let [, {\n        useAccounts\n      }] = _ref4;\n      return useAccounts();\n    });\n    return values[getIndex(connector)];\n  }\n  function useSelectedIsActivating(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref5 => {\n      let [, {\n        useIsActivating\n      }] = _ref5;\n      return useIsActivating();\n    });\n    return values[getIndex(connector)];\n  }\n  function useSelectedAccount(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref6 => {\n      let [, {\n        useAccount\n      }] = _ref6;\n      return useAccount();\n    });\n    return values[getIndex(connector)];\n  }\n  function useSelectedIsActive(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref7 => {\n      let [, {\n        useIsActive\n      }] = _ref7;\n      return useIsActive();\n    });\n    return values[getIndex(connector)];\n  }\n  /**\n   * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n   * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n   * property, over all connectors.\n   */\n  function useSelectedProvider(connector, network) {\n    const index = getIndex(connector);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map((_ref8, i) => {\n      let [, {\n        useProvider\n      }] = _ref8;\n      return useProvider(network, i === index);\n    });\n    return values[index];\n  }\n  function useSelectedENSNames(connector, provider) {\n    const index = getIndex(connector);\n    const values = initializedConnectors.map((_ref9, i) => {\n      let [, {\n        useENSNames\n      }] = _ref9;\n      return (\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined)\n      );\n    });\n    return values[index];\n  }\n  function useSelectedENSName(connector, provider) {\n    const index = getIndex(connector);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map((_ref0, i) => {\n      let [, {\n        useENSName\n      }] = _ref0;\n      return useENSName(i === index ? provider : undefined);\n    });\n    return values[index];\n  }\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector() {\n  for (var _len2 = arguments.length, initializedConnectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    initializedConnectors[_key2] = arguments[_key2];\n  }\n  const {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  } = getSelectedConnector(...initializedConnectors);\n  function usePriorityConnector() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref1 => {\n      let [, {\n        useIsActive\n      }] = _ref1;\n      return useIsActive();\n    });\n    const index = values.findIndex(isActive => isActive);\n    return initializedConnectors[index === -1 ? 0 : index][0];\n  }\n  function usePriorityStore() {\n    return useSelectedStore(usePriorityConnector());\n  }\n  function usePriorityChainId() {\n    return useSelectedChainId(usePriorityConnector());\n  }\n  function usePriorityAccounts() {\n    return useSelectedAccounts(usePriorityConnector());\n  }\n  function usePriorityIsActivating() {\n    return useSelectedIsActivating(usePriorityConnector());\n  }\n  function usePriorityAccount() {\n    return useSelectedAccount(usePriorityConnector());\n  }\n  function usePriorityIsActive() {\n    return useSelectedIsActive(usePriorityConnector());\n  }\n  /**\n   * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n   * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n   * property, over all connectors.\n   */\n  function usePriorityProvider(network) {\n    return useSelectedProvider(usePriorityConnector(), network);\n  }\n  function usePriorityENSNames(provider) {\n    return useSelectedENSNames(usePriorityConnector(), provider);\n  }\n  function usePriorityENSName(provider) {\n    return useSelectedENSName(usePriorityConnector(), provider);\n  }\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName,\n    usePriorityConnector,\n    usePriorityStore,\n    usePriorityChainId,\n    usePriorityAccounts,\n    usePriorityIsActivating,\n    usePriorityAccount,\n    usePriorityIsActive,\n    usePriorityProvider,\n    usePriorityENSNames,\n    usePriorityENSName\n  };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = _ref10 => {\n  let {\n    chainId\n  } = _ref10;\n  return chainId;\n};\nconst ACCOUNTS = _ref11 => {\n  let {\n    accounts\n  } = _ref11;\n  return accounts;\n};\nconst ACTIVATING = _ref12 => {\n  let {\n    activating\n  } = _ref12;\n  return activating;\n};\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => oldAccounts === undefined && newAccounts === undefined || oldAccounts !== undefined && oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) && oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]);\nfunction getStateHooks(store) {\n  function useChainId() {\n    return (0, zustand_1.useStore)(store, CHAIN_ID);\n  }\n  function useAccounts() {\n    return (0, traditional_1.useStoreWithEqualityFn)(store, ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n  }\n  function useIsActivating() {\n    return (0, zustand_1.useStore)(store, ACTIVATING);\n  }\n  return {\n    useChainId,\n    useAccounts,\n    useIsActivating\n  };\n}\nfunction getDerivedHooks(_ref13) {\n  let {\n    useChainId,\n    useAccounts,\n    useIsActivating\n  } = _ref13;\n  function useAccount() {\n    var _a;\n    return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n  }\n  function useIsActive() {\n    const chainId = useChainId();\n    const accounts = useAccounts();\n    const activating = useIsActivating();\n    return computeIsActive({\n      chainId,\n      accounts,\n      activating\n    });\n  }\n  return {\n    useAccount,\n    useIsActive\n  };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\nfunction useENS(provider) {\n  let accounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [ENSNames, setENSNames] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    if (provider && accounts.length) {\n      let stale = false;\n      Promise.all(accounts.map(account => provider.lookupAddress(account))).then(ENSNames => {\n        if (stale) return;\n        setENSNames(ENSNames);\n      }).catch(error => {\n        if (stale) return;\n        console.debug('Could not fetch ENS names', error);\n        setENSNames(new Array(accounts.length).fill(null));\n      });\n      return () => {\n        stale = true;\n        setENSNames(undefined);\n      };\n    }\n  }, [provider, accounts]);\n  return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\nfunction getAugmentedHooks(connector, _ref14, _ref15) {\n  let {\n    useAccounts,\n    useChainId\n  } = _ref14;\n  let {\n    useAccount,\n    useIsActive\n  } = _ref15;\n  /**\n   * Avoid type erasure by returning the most qualified type if not otherwise set.\n   * Note that this function's return type is `T | undefined`, but there is a code path\n   * that returns a Web3Provider, which could conflict with a user-provided T. So,\n   * it's important that users only provide an override for T if they know that\n   * `connector.customProvider` is going to be defined and of type T.\n   *\n   * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n   * must match the type of this property.\n   */\n  function useProvider(network) {\n    let enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const isActive = useIsActive();\n    const chainId = useChainId();\n    // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n    const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n    (0, react_1.useEffect)(() => {\n      if (loaded) return;\n      let stale = false;\n      void importProvider().then(() => {\n        if (stale) return;\n        setLoaded(true);\n      });\n      return () => {\n        stale = true;\n      };\n    }, [loaded]);\n    return (0, react_1.useMemo)(() => {\n      // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n      void loaded && isActive && chainId;\n      if (enabled) {\n        if (connector.customProvider) return connector.customProvider;\n        // see tsdoc note above for return type explanation.\n        else if (DynamicProvider && connector.provider) return new DynamicProvider(connector.provider, network);\n      }\n    }, [loaded, enabled, isActive, chainId, network]);\n  }\n  function useENSNames(provider) {\n    const accounts = useAccounts();\n    return useENS(provider, accounts);\n  }\n  function useENSName(provider) {\n    var _a;\n    const account = useAccount();\n    const accounts = (0, react_1.useMemo)(() => account === undefined ? undefined : [account], [account]);\n    return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n  }\n  return {\n    useProvider,\n    useENSNames,\n    useENSName\n  };\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","exports","getPriorityConnector","getSelectedConnector","initializeConnector","store_1","require","react_1","zustand_1","traditional_1","DynamicProvider","importProvider","Web3Provider","_a","console","debug","f","store","actions","createWeb3ReactStoreAndActions","connector","stateHooks","getStateHooks","derivedHooks","getDerivedHooks","augmentedHooks","getAugmentedHooks","assign","computeIsActive","_ref","chainId","accounts","activating","Boolean","_len","arguments","length","initializedConnectors","Array","_key","getIndex","index","findIndex","_ref2","initializedConnector","Error","useSelectedStore","useSelectedChainId","values","map","_ref3","useChainId","useSelectedAccounts","_ref4","useAccounts","useSelectedIsActivating","_ref5","useIsActivating","useSelectedAccount","_ref6","useAccount","useSelectedIsActive","_ref7","useIsActive","useSelectedProvider","network","_ref8","i","useProvider","useSelectedENSNames","provider","_ref9","useENSNames","useSelectedENSName","_ref0","useENSName","_len2","_key2","usePriorityConnector","_ref1","isActive","usePriorityStore","usePriorityChainId","usePriorityAccounts","usePriorityIsActivating","usePriorityAccount","usePriorityIsActive","usePriorityProvider","usePriorityENSNames","usePriorityENSName","CHAIN_ID","_ref10","ACCOUNTS","_ref11","ACTIVATING","_ref12","ACCOUNTS_EQUALITY_CHECKER","oldAccounts","newAccounts","every","oldAccount","useStore","useStoreWithEqualityFn","_ref13","useENS","ENSNames","setENSNames","useState","useEffect","stale","all","account","lookupAddress","catch","error","fill","_ref14","_ref15","enabled","loaded","setLoaded","useMemo","customProvider"],"sources":["C:/crowdfunding-frontend/node_modules/@web3-react/core/dist/hooks.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = require(\"@web3-react/store\");\nconst react_1 = require(\"react\");\nconst zustand_1 = require(\"zustand\");\nconst traditional_1 = require(\"zustand/traditional\");\nlet DynamicProvider;\nfunction importProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (DynamicProvider === undefined) {\n            try {\n                const { Web3Provider } = yield Promise.resolve().then(() => __importStar(require('@ethersproject/providers')));\n                DynamicProvider = Web3Provider;\n            }\n            catch (_a) {\n                console.debug('@ethersproject/providers not available');\n                DynamicProvider = null;\n            }\n        }\n    });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f) {\n    const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n    const connector = f(actions);\n    const stateHooks = getStateHooks(store);\n    const derivedHooks = getDerivedHooks(stateHooks);\n    const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n    return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive({ chainId, accounts, activating }) {\n    return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector(...initializedConnectors) {\n    function getIndex(connector) {\n        const index = initializedConnectors.findIndex(([initializedConnector]) => connector === initializedConnector);\n        if (index === -1)\n            throw new Error('Connector not found');\n        return index;\n    }\n    function useSelectedStore(connector) {\n        const store = initializedConnectors[getIndex(connector)][2];\n        if (!store)\n            throw new Error('Stores not passed');\n        return store;\n    }\n    // the following code calls hooks in a map a lot, which violates the eslint rule.\n    // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n    function useSelectedChainId(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useChainId }]) => useChainId());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccounts(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccounts }]) => useAccounts());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActivating(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActivating }]) => useIsActivating());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccount(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccount }]) => useAccount());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActive(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        return values[getIndex(connector)];\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function useSelectedProvider(connector, network) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useProvider }], i) => useProvider(network, i === index));\n        return values[index];\n    }\n    function useSelectedENSNames(connector, provider) {\n        const index = getIndex(connector);\n        const values = initializedConnectors.map(([, { useENSNames }], i) => \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined));\n        return values[index];\n    }\n    function useSelectedENSName(connector, provider) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useENSName }], i) => useENSName(i === index ? provider : undefined));\n        return values[index];\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n    };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector(...initializedConnectors) {\n    const { useSelectedStore, useSelectedChainId, useSelectedAccounts, useSelectedIsActivating, useSelectedAccount, useSelectedIsActive, useSelectedProvider, useSelectedENSNames, useSelectedENSName, } = getSelectedConnector(...initializedConnectors);\n    function usePriorityConnector() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        const index = values.findIndex((isActive) => isActive);\n        return initializedConnectors[index === -1 ? 0 : index][0];\n    }\n    function usePriorityStore() {\n        return useSelectedStore(usePriorityConnector());\n    }\n    function usePriorityChainId() {\n        return useSelectedChainId(usePriorityConnector());\n    }\n    function usePriorityAccounts() {\n        return useSelectedAccounts(usePriorityConnector());\n    }\n    function usePriorityIsActivating() {\n        return useSelectedIsActivating(usePriorityConnector());\n    }\n    function usePriorityAccount() {\n        return useSelectedAccount(usePriorityConnector());\n    }\n    function usePriorityIsActive() {\n        return useSelectedIsActive(usePriorityConnector());\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function usePriorityProvider(network) {\n        return useSelectedProvider(usePriorityConnector(), network);\n    }\n    function usePriorityENSNames(provider) {\n        return useSelectedENSNames(usePriorityConnector(), provider);\n    }\n    function usePriorityENSName(provider) {\n        return useSelectedENSName(usePriorityConnector(), provider);\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n        usePriorityConnector,\n        usePriorityStore,\n        usePriorityChainId,\n        usePriorityAccounts,\n        usePriorityIsActivating,\n        usePriorityAccount,\n        usePriorityIsActive,\n        usePriorityProvider,\n        usePriorityENSNames,\n        usePriorityENSName,\n    };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = ({ chainId }) => chainId;\nconst ACCOUNTS = ({ accounts }) => accounts;\nconst ACTIVATING = ({ activating }) => activating;\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => (oldAccounts === undefined && newAccounts === undefined) ||\n    (oldAccounts !== undefined &&\n        oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) &&\n        oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]));\nfunction getStateHooks(store) {\n    function useChainId() {\n        return (0, zustand_1.useStore)(store, CHAIN_ID);\n    }\n    function useAccounts() {\n        return (0, traditional_1.useStoreWithEqualityFn)(store, ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n    }\n    function useIsActivating() {\n        return (0, zustand_1.useStore)(store, ACTIVATING);\n    }\n    return { useChainId, useAccounts, useIsActivating };\n}\nfunction getDerivedHooks({ useChainId, useAccounts, useIsActivating }) {\n    function useAccount() {\n        var _a;\n        return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    function useIsActive() {\n        const chainId = useChainId();\n        const accounts = useAccounts();\n        const activating = useIsActivating();\n        return computeIsActive({\n            chainId,\n            accounts,\n            activating,\n        });\n    }\n    return { useAccount, useIsActive };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\nfunction useENS(provider, accounts = []) {\n    const [ENSNames, setENSNames] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        if (provider && accounts.length) {\n            let stale = false;\n            Promise.all(accounts.map((account) => provider.lookupAddress(account)))\n                .then((ENSNames) => {\n                if (stale)\n                    return;\n                setENSNames(ENSNames);\n            })\n                .catch((error) => {\n                if (stale)\n                    return;\n                console.debug('Could not fetch ENS names', error);\n                setENSNames(new Array(accounts.length).fill(null));\n            });\n            return () => {\n                stale = true;\n                setENSNames(undefined);\n            };\n        }\n    }, [provider, accounts]);\n    return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\nfunction getAugmentedHooks(connector, { useAccounts, useChainId }, { useAccount, useIsActive }) {\n    /**\n     * Avoid type erasure by returning the most qualified type if not otherwise set.\n     * Note that this function's return type is `T | undefined`, but there is a code path\n     * that returns a Web3Provider, which could conflict with a user-provided T. So,\n     * it's important that users only provide an override for T if they know that\n     * `connector.customProvider` is going to be defined and of type T.\n     *\n     * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n     * must match the type of this property.\n     */\n    function useProvider(network, enabled = true) {\n        const isActive = useIsActive();\n        const chainId = useChainId();\n        // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n        const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n        (0, react_1.useEffect)(() => {\n            if (loaded)\n                return;\n            let stale = false;\n            void importProvider().then(() => {\n                if (stale)\n                    return;\n                setLoaded(true);\n            });\n            return () => {\n                stale = true;\n            };\n        }, [loaded]);\n        return (0, react_1.useMemo)(() => {\n            // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n            void loaded && isActive && chainId;\n            if (enabled) {\n                if (connector.customProvider)\n                    return connector.customProvider;\n                // see tsdoc note above for return type explanation.\n                else if (DynamicProvider && connector.provider)\n                    return new DynamicProvider(connector.provider, network);\n            }\n        }, [loaded, enabled, isActive, chainId, network]);\n    }\n    function useENSNames(provider) {\n        const accounts = useAccounts();\n        return useENS(provider, accounts);\n    }\n    function useENSName(provider) {\n        var _a;\n        const account = useAccount();\n        const accounts = (0, react_1.useMemo)(() => (account === undefined ? undefined : [account]), [account]);\n        return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    return { useProvider, useENSNames, useENSName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}