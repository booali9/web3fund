{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetaMask = exports.NoMetaMaskError = void 0;\nconst types_1 = require(\"@web3-react/types\");\nclass NoMetaMaskError extends Error {\n  constructor() {\n    super('MetaMask not installed');\n    this.name = NoMetaMaskError.name;\n    Object.setPrototypeOf(this, NoMetaMaskError.prototype);\n  }\n}\nexports.NoMetaMaskError = NoMetaMaskError;\nfunction parseChainId(chainId) {\n  return Number.parseInt(chainId, 16);\n}\nclass MetaMask extends types_1.Connector {\n  constructor(_ref) {\n    let {\n      actions,\n      options,\n      onError\n    } = _ref;\n    super(actions, onError);\n    this.options = options;\n  }\n  isomorphicInitialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.eagerConnection) return;\n      return this.eagerConnection = Promise.resolve().then(() => __importStar(require('@metamask/detect-provider'))).then(m => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const provider = yield m.default(this.options);\n        if (provider) {\n          this.provider = provider;\n          // handle the case when e.g. metamask and coinbase wallet are both installed\n          if ((_a = this.provider.providers) === null || _a === void 0 ? void 0 : _a.length) {\n            this.provider = (_b = this.provider.providers.find(p => p.isMetaMask)) !== null && _b !== void 0 ? _b : this.provider.providers[0];\n          }\n          this.provider.on('connect', _ref2 => {\n            let {\n              chainId\n            } = _ref2;\n            this.actions.update({\n              chainId: parseChainId(chainId)\n            });\n          });\n          this.provider.on('disconnect', error => {\n            var _a;\n            // 1013 indicates that MetaMask is attempting to reestablish the connection\n            // https://github.com/MetaMask/providers/releases/tag/v8.0.0\n            if (error.code === 1013) {\n              console.debug('MetaMask logged connection error 1013: \"Try again later\"');\n              return;\n            }\n            this.actions.resetState();\n            (_a = this.onError) === null || _a === void 0 ? void 0 : _a.call(this, error);\n          });\n          this.provider.on('chainChanged', chainId => {\n            this.actions.update({\n              chainId: parseChainId(chainId)\n            });\n          });\n          this.provider.on('accountsChanged', accounts => {\n            if (accounts.length === 0) {\n              // handle this edge case by disconnecting\n              this.actions.resetState();\n            } else {\n              this.actions.update({\n                accounts\n              });\n            }\n          });\n        }\n      }));\n    });\n  }\n  /** {@inheritdoc Connector.connectEagerly} */\n  connectEagerly() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const cancelActivation = this.actions.startActivation();\n      try {\n        yield this.isomorphicInitialize();\n        if (!this.provider) return cancelActivation();\n        // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n        // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n        const accounts = yield this.provider.request({\n          method: 'eth_accounts'\n        });\n        if (!accounts.length) throw new Error('No accounts returned');\n        const chainId = yield this.provider.request({\n          method: 'eth_chainId'\n        });\n        this.actions.update({\n          chainId: parseChainId(chainId),\n          accounts\n        });\n      } catch (error) {\n        console.debug('Could not connect eagerly', error);\n        // we should be able to use `cancelActivation` here, but on mobile, metamask emits a 'connect'\n        // event, meaning that chainId is updated, and cancelActivation doesn't work because an intermediary\n        // update has occurred, so we reset state instead\n        this.actions.resetState();\n      }\n    });\n  }\n  /**\n   * Initiates a connection.\n   *\n   * @param desiredChainIdOrChainParameters - If defined, indicates the desired chain to connect to. If the user is\n   * already connected to this chain, no additional steps will be taken. Otherwise, the user will be prompted to switch\n   * to the chain, if one of two conditions is met: either they already have it added in their extension, or the\n   * argument is of type AddEthereumChainParameter, in which case the user will be prompted to add the chain with the\n   * specified parameters first, before being prompted to switch.\n   */\n  activate(desiredChainIdOrChainParameters) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      let cancelActivation;\n      if (!((_b = (_a = this.provider) === null || _a === void 0 ? void 0 : _a.isConnected) === null || _b === void 0 ? void 0 : _b.call(_a))) cancelActivation = this.actions.startActivation();\n      return this.isomorphicInitialize().then(() => __awaiter(this, void 0, void 0, function* () {\n        if (!this.provider) throw new NoMetaMaskError();\n        // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n        // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n        const accounts = yield this.provider.request({\n          method: 'eth_requestAccounts'\n        });\n        const chainId = yield this.provider.request({\n          method: 'eth_chainId'\n        });\n        const receivedChainId = parseChainId(chainId);\n        const desiredChainId = typeof desiredChainIdOrChainParameters === 'number' ? desiredChainIdOrChainParameters : desiredChainIdOrChainParameters === null || desiredChainIdOrChainParameters === void 0 ? void 0 : desiredChainIdOrChainParameters.chainId;\n        // if there's no desired chain, or it's equal to the received, update\n        if (!desiredChainId || receivedChainId === desiredChainId) return this.actions.update({\n          chainId: receivedChainId,\n          accounts\n        });\n        const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n        // if we're here, we can try to switch networks\n        return this.provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: desiredChainIdHex\n          }]\n        }).catch(error => {\n          var _a, _b;\n          // https://github.com/MetaMask/metamask-mobile/issues/3312#issuecomment-1065923294\n          const errorCode = ((_b = (_a = error.data) === null || _a === void 0 ? void 0 : _a.originalError) === null || _b === void 0 ? void 0 : _b.code) || error.code;\n          // 4902 indicates that the chain has not been added to MetaMask and wallet_addEthereumChain needs to be called\n          // https://docs.metamask.io/guide/rpc-api.html#wallet-switchethereumchain\n          if (errorCode === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n            if (!this.provider) throw new Error('No provider');\n            // if we're here, we can try to add a new network\n            return this.provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), {\n                chainId: desiredChainIdHex\n              })]\n            });\n          }\n          throw error;\n        }).then(() => this.activate(desiredChainId));\n      })).catch(error => {\n        cancelActivation === null || cancelActivation === void 0 ? void 0 : cancelActivation();\n        throw error;\n      });\n    });\n  }\n  watchAsset(_ref3) {\n    let {\n      address,\n      symbol,\n      decimals,\n      image\n    } = _ref3;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.provider) throw new Error('No provider');\n      return this.provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: {\n            address,\n            symbol,\n            decimals,\n            image // A string url of the token logo\n          }\n        }\n      }).then(success => {\n        if (!success) throw new Error('Rejected');\n        return true;\n      });\n    });\n  }\n}\nexports.MetaMask = MetaMask;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","exports","MetaMask","NoMetaMaskError","types_1","require","Error","constructor","name","setPrototypeOf","parseChainId","chainId","Number","parseInt","Connector","_ref","actions","options","onError","isomorphicInitialize","eagerConnection","_a","_b","provider","default","providers","length","find","p","isMetaMask","on","_ref2","update","error","code","console","debug","resetState","accounts","connectEagerly","cancelActivation","startActivation","request","method","activate","desiredChainIdOrChainParameters","isConnected","receivedChainId","desiredChainId","desiredChainIdHex","toString","params","catch","errorCode","data","originalError","assign","watchAsset","_ref3","address","symbol","decimals","image","type","success"],"sources":["C:/crowdfunding-frontend/node_modules/@web3-react/metamask/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetaMask = exports.NoMetaMaskError = void 0;\nconst types_1 = require(\"@web3-react/types\");\nclass NoMetaMaskError extends Error {\n    constructor() {\n        super('MetaMask not installed');\n        this.name = NoMetaMaskError.name;\n        Object.setPrototypeOf(this, NoMetaMaskError.prototype);\n    }\n}\nexports.NoMetaMaskError = NoMetaMaskError;\nfunction parseChainId(chainId) {\n    return Number.parseInt(chainId, 16);\n}\nclass MetaMask extends types_1.Connector {\n    constructor({ actions, options, onError }) {\n        super(actions, onError);\n        this.options = options;\n    }\n    isomorphicInitialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.eagerConnection)\n                return;\n            return (this.eagerConnection = Promise.resolve().then(() => __importStar(require('@metamask/detect-provider'))).then((m) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const provider = yield m.default(this.options);\n                if (provider) {\n                    this.provider = provider;\n                    // handle the case when e.g. metamask and coinbase wallet are both installed\n                    if ((_a = this.provider.providers) === null || _a === void 0 ? void 0 : _a.length) {\n                        this.provider = (_b = this.provider.providers.find((p) => p.isMetaMask)) !== null && _b !== void 0 ? _b : this.provider.providers[0];\n                    }\n                    this.provider.on('connect', ({ chainId }) => {\n                        this.actions.update({ chainId: parseChainId(chainId) });\n                    });\n                    this.provider.on('disconnect', (error) => {\n                        var _a;\n                        // 1013 indicates that MetaMask is attempting to reestablish the connection\n                        // https://github.com/MetaMask/providers/releases/tag/v8.0.0\n                        if (error.code === 1013) {\n                            console.debug('MetaMask logged connection error 1013: \"Try again later\"');\n                            return;\n                        }\n                        this.actions.resetState();\n                        (_a = this.onError) === null || _a === void 0 ? void 0 : _a.call(this, error);\n                    });\n                    this.provider.on('chainChanged', (chainId) => {\n                        this.actions.update({ chainId: parseChainId(chainId) });\n                    });\n                    this.provider.on('accountsChanged', (accounts) => {\n                        if (accounts.length === 0) {\n                            // handle this edge case by disconnecting\n                            this.actions.resetState();\n                        }\n                        else {\n                            this.actions.update({ accounts });\n                        }\n                    });\n                }\n            })));\n        });\n    }\n    /** {@inheritdoc Connector.connectEagerly} */\n    connectEagerly() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cancelActivation = this.actions.startActivation();\n            try {\n                yield this.isomorphicInitialize();\n                if (!this.provider)\n                    return cancelActivation();\n                // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n                // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n                const accounts = (yield this.provider.request({ method: 'eth_accounts' }));\n                if (!accounts.length)\n                    throw new Error('No accounts returned');\n                const chainId = (yield this.provider.request({ method: 'eth_chainId' }));\n                this.actions.update({ chainId: parseChainId(chainId), accounts });\n            }\n            catch (error) {\n                console.debug('Could not connect eagerly', error);\n                // we should be able to use `cancelActivation` here, but on mobile, metamask emits a 'connect'\n                // event, meaning that chainId is updated, and cancelActivation doesn't work because an intermediary\n                // update has occurred, so we reset state instead\n                this.actions.resetState();\n            }\n        });\n    }\n    /**\n     * Initiates a connection.\n     *\n     * @param desiredChainIdOrChainParameters - If defined, indicates the desired chain to connect to. If the user is\n     * already connected to this chain, no additional steps will be taken. Otherwise, the user will be prompted to switch\n     * to the chain, if one of two conditions is met: either they already have it added in their extension, or the\n     * argument is of type AddEthereumChainParameter, in which case the user will be prompted to add the chain with the\n     * specified parameters first, before being prompted to switch.\n     */\n    activate(desiredChainIdOrChainParameters) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            let cancelActivation;\n            if (!((_b = (_a = this.provider) === null || _a === void 0 ? void 0 : _a.isConnected) === null || _b === void 0 ? void 0 : _b.call(_a)))\n                cancelActivation = this.actions.startActivation();\n            return this.isomorphicInitialize()\n                .then(() => __awaiter(this, void 0, void 0, function* () {\n                if (!this.provider)\n                    throw new NoMetaMaskError();\n                // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n                // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n                const accounts = (yield this.provider.request({ method: 'eth_requestAccounts' }));\n                const chainId = (yield this.provider.request({ method: 'eth_chainId' }));\n                const receivedChainId = parseChainId(chainId);\n                const desiredChainId = typeof desiredChainIdOrChainParameters === 'number'\n                    ? desiredChainIdOrChainParameters\n                    : desiredChainIdOrChainParameters === null || desiredChainIdOrChainParameters === void 0 ? void 0 : desiredChainIdOrChainParameters.chainId;\n                // if there's no desired chain, or it's equal to the received, update\n                if (!desiredChainId || receivedChainId === desiredChainId)\n                    return this.actions.update({ chainId: receivedChainId, accounts });\n                const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n                // if we're here, we can try to switch networks\n                return this.provider\n                    .request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: desiredChainIdHex }],\n                })\n                    .catch((error) => {\n                    var _a, _b;\n                    // https://github.com/MetaMask/metamask-mobile/issues/3312#issuecomment-1065923294\n                    const errorCode = ((_b = (_a = error.data) === null || _a === void 0 ? void 0 : _a.originalError) === null || _b === void 0 ? void 0 : _b.code) || error.code;\n                    // 4902 indicates that the chain has not been added to MetaMask and wallet_addEthereumChain needs to be called\n                    // https://docs.metamask.io/guide/rpc-api.html#wallet-switchethereumchain\n                    if (errorCode === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n                        if (!this.provider)\n                            throw new Error('No provider');\n                        // if we're here, we can try to add a new network\n                        return this.provider.request({\n                            method: 'wallet_addEthereumChain',\n                            params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), { chainId: desiredChainIdHex })],\n                        });\n                    }\n                    throw error;\n                })\n                    .then(() => this.activate(desiredChainId));\n            }))\n                .catch((error) => {\n                cancelActivation === null || cancelActivation === void 0 ? void 0 : cancelActivation();\n                throw error;\n            });\n        });\n    }\n    watchAsset({ address, symbol, decimals, image }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.provider)\n                throw new Error('No provider');\n            return this.provider\n                .request({\n                method: 'wallet_watchAsset',\n                params: {\n                    type: 'ERC20',\n                    options: {\n                        address,\n                        symbol,\n                        decimals,\n                        image, // A string url of the token logo\n                    },\n                },\n            })\n                .then((success) => {\n                if (!success)\n                    throw new Error('Rejected');\n                return true;\n            });\n        });\n    }\n}\nexports.MetaMask = MetaMask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}